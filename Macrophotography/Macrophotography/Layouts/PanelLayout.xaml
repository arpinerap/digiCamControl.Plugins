<Layouts:LayoutBaseMacro x:Class="Macrophotography.Layouts.PanelLayout"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Core="clr-namespace:CameraControl.Core;assembly=CameraControl.Core"
             xmlns:Layouts="clr-namespace:Macrophotography.Layouts"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:translation="clr-namespace:CameraControl.Core.Translation;assembly=CameraControl.Core"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:classes="clr-namespace:CameraControl.Core.Classes;assembly=CameraControl.Core"
             xmlns:classes2="clr-namespace:Macrophotography.Classes"
             xmlns:viewModel="clr-namespace:Macrophotography.ViewModel"
             xmlns:zoompan="clr-namespace:CameraControl.Core.Controls.ZoomAndPan;assembly=CameraControl.Core"
             mc:Ignorable="d" 
             d:DesignHeight="190" d:DesignWidth="689">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="LayoutBaseResource.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.DataContext>
        <viewModel:ImageListViewModel/>
    </UserControl.DataContext>


    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ListBox Grid.Row="0" VirtualizingStackPanel.IsVirtualizing="True"  Name="ImageLIstBox" ItemsSource="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=DefaultSession.Files, IsAsync=True}" 
                 BorderThickness="0" IsSynchronizedWithCurrentItem="True" Focusable="False" VerticalAlignment="Stretch" Margin="0" ScrollViewer.CanContentScroll="False" BorderBrush="Black" Background="{x:Null}">
            <i:Interaction.Behaviors>
                <classes2:HorizontalScrollBehavior />
            </i:Interaction.Behaviors>
            <ListBox.ContextMenu>
                <ContextMenu>
                    <ContextMenu.DataContext>
                        <viewModel:ImageListViewModel/>
                    </ContextMenu.DataContext>
                    <MenuItem Header="Select" >
                        <MenuItem Header="{translation:TranslateExtension LabelSelectNone}" Command="{Binding Path=SelectNoneCommand}"/>
                        <MenuItem Header="{translation:TranslateExtension LabelSelectAll}" Command="{Binding Path=SelectAllCommand}"/>
                        <MenuItem Header="{translation:TranslateExtension LabelSelectUnLiked}" Command="{Binding Path=SelectUnLiked}"/>
                        <MenuItem Header="{translation:TranslateExtension LabelSelectLiked}" Command="{Binding Path=SelectLiked}"/>
                        <MenuItem Header="{translation:TranslateExtension LabelSelectSeries}" Command="{Binding Path=SelectSeries}"/>
                        <MenuItem Header="{translation:TranslateExtension MenuInver}" Command="{Binding Path=SelectInvertCommand}"/>
                    </MenuItem>
                    <MenuItem Header="Edit in" >
                        <MenuItem Header="Photoshop" Command="{Binding OpenInPhotoshopCommand}" Visibility="{Binding PhotoshopIsInstalled, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <MenuItem Header="Lightroom" Command="{Binding OpenInLightroomCommand}" Visibility="{Binding LightroomIsInstalled, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{translation:TranslateExtension LabelDeleteFiles}" Command="{Binding SendCommand}" CommandParameter="Del_Image" />
                    <MenuItem Header="{translation:TranslateExtension LabelShowInExplorer}" Command="{Binding SendCommand}" CommandParameter="ViewExplorer" />
                    <MenuItem Header="{translation:TranslateExtension LabelOpenInExternalViewer}" Command="{Binding SendCommand}" CommandParameter="ViewExternal" />
                    <MenuItem Header="Copy full path in clipboard" Name="mnu_copypath" Command="{Binding Path=CopyNameClipboardCommand}" />
                </ContextMenu>
            </ListBox.ContextMenu>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal" VerticalAlignment="Top" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
        
        <StackPanel Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Right" Orientation="Horizontal" Background="{DynamicResource WhiteBrush}"  Margin="10,10,10,0">
            <Label Content="{Binding ElementName=ImageLIstBox, Path=SelectedIndex}" Margin="0" Padding="0"/>
            <Label Content="/" Margin="0" Padding="0"/>
            <Label Content="{Binding ElementName=ImageLIstBox, Path=Items.Count}" Margin="0" Padding="0"/>
        </StackPanel>
        
        <StatusBar Grid.Row="1" UseLayoutRounding="True" HorizontalAlignment="Stretch"
                   Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowThumbPanel, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StatusBar.Background>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="{DynamicResource AccentColor}" Offset="1"/>
                    <GradientStop Color="{DynamicResource AccentColor4}"/>
                </LinearGradientBrush>
            </StatusBar.Background>
            <StatusBarItem >
                <StackPanel Orientation="Horizontal">
                    <Button Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Margin="1"  Command="{Binding PrevImageCommand}" VerticalAlignment="Center" HorizontalAlignment="Right" Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Height="{Binding SizeIcons}" Width="{Binding SizeIcons}" >
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_chevron_left}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Margin="1"  Command="{Binding NextImageCommand}" VerticalAlignment="Center" HorizontalAlignment="Right" Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Height="{Binding SizeIcons}" Width="{Binding SizeIcons}">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_chevron_right}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <StackPanel  HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal" Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=ShowThumbUpDown, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false}">
                        <ToggleButton Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Margin="2,-2" IsChecked="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.IsUnLiked}"  Style="{DynamicResource MetroCircleToggleButtonStyle}">
                            <Rectangle Height="{Binding SizeIcons}" Width="{Binding SizeIcons}">
                                <Rectangle.Fill>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_thumbs_down}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </ToggleButton>
                        <ToggleButton  Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Margin="2,-2" IsChecked="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.IsLiked}"  Style="{DynamicResource MetroCircleToggleButtonStyle}">
                            <Rectangle Height="{Binding SizeIcons}" Width="{Binding SizeIcons}">
                                <Rectangle.Fill>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_thumbs_up}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </ToggleButton>
                    </StackPanel>

                    <!--   New buttons for selection -->
                    <Button Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Margin="1"  Command="{Binding Path=SelectNoneCommand}" ToolTip="{translation:TranslateExtension LabelSelectNone}" VerticalAlignment="Center" HorizontalAlignment="Right" Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Height="{Binding SizeIcons}" Width="{Binding SizeIcons}">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_checkmark_thick_unchecked}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button Margin="1" Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Command="{Binding Path=SelectAllCommand}" ToolTip="{translation:TranslateExtension LabelSelectAll}" VerticalAlignment="Center" HorizontalAlignment="Right" Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Height="{Binding SizeIcons}" Width="{Binding SizeIcons}">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_checkmark_thick}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>

                    <!--   New buttons other software! -->

                    <Button Margin="1" Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Command="{Binding OpenInLightroomCommand}" 
                            ToolTip="{translation:TranslateExtension LabelOpenLightroom}" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Right" Style="{DynamicResource MetroCircleButtonStyle}"
                            Visibility="{Binding LightroomIsInstalled, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Rectangle Height="{Binding SizeIcons}" Width="{Binding SizeIcons}">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_adobe_lightroom}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>

                    <Button Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Margin="2,-2" ToolTip="{translation:TranslateExtension LabelDeleteFiles}" VerticalAlignment="Center" HorizontalAlignment="Right"  Command="{Binding Path=DeleteItemCommand}" Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Height="{Binding SizeIcons}" Width="{Binding SizeIcons}">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_delete}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Margin="2,-2" ToolTip="{translation:TranslateExtension LabelShowInExplorer}" VerticalAlignment="Center" HorizontalAlignment="Right"  Command="{Binding Path=OpenExplorerCommand}"  Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Height="{Binding SizeIcons}" Width="{Binding SizeIcons}">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_folder_open}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Margin="2,-2" ToolTip="{translation:TranslateExtension LabelRestoreFromBackup}" VerticalAlignment="Center" HorizontalAlignment="Right"  Command="{Binding Path=RestoreCommand}"  Style="{DynamicResource MetroCircleButtonStyle}"
                    IsEnabled="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.HaveBackupFile}">
                        <Rectangle Height="{Binding SizeIcons}" Width="{Binding SizeIcons}">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_reset}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Margin="2,-2" ToolTip="{translation:TranslateExtension LabelRotateCounterclockwise}" VerticalAlignment="Center" HorizontalAlignment="Right"  Command="{Binding Path=RotateLeftCommand}"  Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Height="{Binding SizeIcons}" Width="{Binding SizeIcons}">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_transform_rotate_counterclockwise}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Margin="2,-2" ToolTip="{translation:TranslateExtension LabelRotateClockwise}" VerticalAlignment="Center" HorizontalAlignment="Right"  Command="{Binding Path=RotateRightCommand}"  Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Height="{Binding SizeIcons}" Width="{Binding SizeIcons}">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_transform_rotate_clockwise}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <ItemsControl ItemsSource="{Binding PanelPlugins}" Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" >
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding Control}" Visibility="{Binding Path=Visible, Converter={StaticResource BooleanToVisibilityConverter}}" Height="{Binding SizeIcons}" Width="{Binding SizeIcons}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal" Width="100"/>
            </StatusBarItem>
            <StatusBarItem  DockPanel.Dock="Left" >
                <ToggleButton Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Content="Fit" Style="{DynamicResource MetroCircleToggleButtonStyle}" IsChecked="{Binding ZoomFit}"/>
            </StatusBarItem>
            <StatusBarItem  DockPanel.Dock="Left">
                <ToggleButton Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Content="1:1" Style="{DynamicResource MetroCircleToggleButtonStyle}" IsChecked="{Binding Zoom11}"/>
            </StatusBarItem>
            <StatusBarItem  DockPanel.Dock="Left">
                <ToggleButton Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Content="1:2" Style="{DynamicResource MetroCircleToggleButtonStyle}" IsChecked="{Binding Zoom12}"/>
            </StatusBarItem>
            <!--<StatusBarItem  DockPanel.Dock="Left">
                <ToggleButton Height="{Binding SizeButtons}" Width="{Binding SizeButtons}" Content="[ : ]" Style="{DynamicResource MetroCircleToggleButtonStyle}" IsChecked="{Binding ZoomToFocus}" ToolTip="{translation:TranslateExtension LabelZoomToFocus}" />
            </StatusBarItem>-->
            <StatusBarItem  DockPanel.Dock="Left">
                <controls:ProgressRing IsActive="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=ImageLoading}" VerticalAlignment="Center" HorizontalAlignment="Right"  Height="30" Width="30" />
            </StatusBarItem>

        </StatusBar>

    </Grid>
</Layouts:LayoutBaseMacro>
