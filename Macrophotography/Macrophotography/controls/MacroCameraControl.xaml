<UserControl x:Class="Macrophotography.controls.MacroCameraControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Core="clr-namespace:CameraControl.Core;assembly=CameraControl.Core"
             xmlns:Devices="clr-namespace:CameraControl.Devices;assembly=CameraControl.Devices"
             xmlns:macrophotography="clr-namespace:Macrophotography"
             xmlns:translation="clr-namespace:CameraControl.Core.Translation;assembly=CameraControl.Core"
             xmlns:T="clr-namespace:CameraControl.Core.Translation;assembly=CameraControl.Core"
             xmlns:wpf="clr-namespace:CameraControl.Core.Wpf;assembly=CameraControl.Core"
             xmlns:RadialMenu="clr-namespace:RadialMenu.Controls;assembly=RadialMenu"
             xmlns:my="clr-namespace:CameraControl.Controls;assembly=CameraControl.Core"             
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:local="clr-namespace:Macrophotography.controls"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             mc:Ignorable="d" 
             d:DesignHeight="1400" d:DesignWidth="180">

    <UserControl.DataContext>
        <macrophotography:LiveViewViewModel/>
    </UserControl.DataContext>


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
                <ResourceDictionary Source="/Macrophotography;component/Styles/CustomControls.xaml"/>
                <ResourceDictionary Source="/Macrophotography;component/Resources/Icons.xaml" />
                <ResourceDictionary Source="/Macrophotography;component/Resources/Moreicons.xaml"/>

            </ResourceDictionary.MergedDictionaries>
            
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1" />

            <!-- MoveThumb Template -->
            <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type wpf:MoveThumb}">
                <Rectangle Fill="Transparent"/>
            </ControlTemplate>

            <!-- ResizeDecorator Template -->
            <ControlTemplate x:Key="ResizeDecoratorTemplate" TargetType="{x:Type Control}">
                <Grid>
                    <wpf:ResizeThumb Height="3" Cursor="SizeNS" Margin="0 -4 0 0"
                       VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
                    <wpf:ResizeThumb Width="3" Cursor="SizeWE" Margin="-4 0 0 0"
                       VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                    <wpf:ResizeThumb Width="3" Cursor="SizeWE" Margin="0 0 -4 0"
                       VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
                    <wpf:ResizeThumb Height="3" Cursor="SizeNS" Margin="0 0 0 -4"
                       VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                    <wpf:ResizeThumb Width="7" Height="7" Cursor="SizeNWSE" Margin="-6 -6 0 0"
                       VerticalAlignment="Top" HorizontalAlignment="Left"/>
                    <wpf:ResizeThumb Width="7" Height="7" Cursor="SizeNESW" Margin="0 -6 -6 0"
                       VerticalAlignment="Top" HorizontalAlignment="Right"/>
                    <wpf:ResizeThumb Width="7" Height="7" Cursor="SizeNESW" Margin="-6 0 0 -6"
                       VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                    <wpf:ResizeThumb Width="7" Height="7" Cursor="SizeNWSE" Margin="0 0 -6 -6"
                       VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                </Grid>
            </ControlTemplate>
            <!-- Designer Item Template-->
            <ControlTemplate x:Key="DesignerItemTemplate" TargetType="ContentControl">
                <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                    <wpf:MoveThumb Template="{StaticResource MoveThumbTemplate}" Cursor="SizeAll"/>
                    <Control Template="{StaticResource ResizeDecoratorTemplate}"/>
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}"/>
                </Grid>
            </ControlTemplate>

            <!-- The IconButtonStyle -->
            <Style x:Key="IconButtonStyle"
               TargetType="{x:Type Button}">
                <!-- set some default values -->
                <Setter Property="Background"
                    Value="Transparent" />
                <Setter Property="BorderBrush"
                    Value="Transparent" />
                <!-- set the visual tree of the control -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <!-- here come the actual sub-controls -->
                            <Border x:Name="border"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                SnapsToDevicePixels="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Padding="0"
                                CornerRadius="3,3,3,3">
                                <Border x:Name="innerBorder"
                                    SnapsToDevicePixels="True"
                                    BorderThickness="1"
                                    Padding="2"
                                    CornerRadius="3,3,3,3">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  Margin="{TemplateBinding Padding}">
                                        <ContentPresenter.Effect>
                                            <!-- give the content a bit of shadow -->
                                            <DropShadowEffect x:Name="shadow"
                                                          ShadowDepth="2"
                                                          Opacity="0.7"
                                                          BlurRadius="3" />
                                        </ContentPresenter.Effect>
                                        <ContentPresenter.RenderTransform>
                                            <!-- push the content a bit to the left and the top -->
                                            <TranslateTransform x:Name="translation"
                                                            X="-1"
                                                            Y="-1" />
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>

                                <!-- when the control is disabled, just let the background shine through -->
                                <Trigger Property="IsEnabled"
                                     Value="false">
                                    <Setter Property="Opacity"
                                        Value="0.5" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                     Value="True">
                                    <!-- This Trigger manages the Animation of the button's content and its shadow -->
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="shadow"
                                                             Storyboard.TargetProperty="(DropShadowEffect.ShadowDepth)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.X)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.Y)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="1"
                                                             Storyboard.TargetName="shadow"
                                                             Storyboard.TargetProperty="(DropShadowEffect.ShadowDepth)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="-1"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.X)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="-1"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.Y)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- This is what Expression Blend creates as default Template -->
            <Style x:Key="ButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle SnapsToDevicePixels="true"
                                   Margin="2"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ButtonNormalBackground"
                             EndPoint="0,1"
                             StartPoint="0,0">
                <GradientStop Color="#F3F3F3"
                          Offset="0" />
                <GradientStop Color="#EBEBEB"
                          Offset="0.5" />
                <GradientStop Color="#DDDDDD"
                          Offset="0.5" />
                <GradientStop Color="#CDCDCD"
                          Offset="1" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonNormalBorder"
                         Color="#FF707070" />
            <Style x:Key="DefaultButtonStyle"
               TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}" />
                <Setter Property="Background"
                    Value="{StaticResource ButtonNormalBackground}" />
                <Setter Property="BorderBrush"
                    Value="{StaticResource ButtonNormalBorder}" />
                <Setter Property="BorderThickness"
                    Value="1" />
                <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
                <Setter Property="VerticalContentAlignment"
                    Value="Center" />
                <Setter Property="Padding"
                    Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Microsoft_Windows_Themes:ButtonChrome SnapsToDevicePixels="true"
                                                               x:Name="Chrome"
                                                               Background="{TemplateBinding Background}"
                                                               BorderBrush="{TemplateBinding BorderBrush}"
                                                               RenderDefaulted="{TemplateBinding IsDefaulted}"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsPressed}">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True" />
                            </Microsoft_Windows_Themes:ButtonChrome>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused"
                                     Value="true">
                                    <Setter Property="RenderDefaulted"
                                        TargetName="Chrome"
                                        Value="true" />
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked"
                                     Value="true">
                                    <Setter Property="RenderPressed"
                                        TargetName="Chrome"
                                        Value="true" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                     Value="false">
                                    <Setter Property="Foreground"
                                        Value="#ADADAD" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>


    <Grid>
        <ScrollViewer>
            <StackPanel Orientation="Vertical">
                <Expander Header="{T:TranslateExtension LabelLuminosity}" IsExpanded="{Binding ShowHistogram}"
                              Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowLuminosityLiveView, Converter={StaticResource BooleanToVisibilityConverter1}}">
                    <Expander.Content>
                        <Grid Height="75" >
                            <Polygon Points="{Binding Path=LuminanceHistogramPoints}" Stretch="Fill" Fill="LightGray" Opacity="1" Visibility="{Binding ElementName=TgGray, Path=IsChecked,  Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                            <Polygon Points="{Binding Path=RedColorHistogramPoints}" Stretch="Fill" Fill="Red" Opacity="0.9" Visibility="{Binding ElementName=TgRed, Path=IsChecked,  Converter={StaticResource BooleanToVisibilityConverter1}}" />
                            <Polygon Points="{Binding Path=GreenColorHistogramPoints}" Stretch="Fill" Fill="Green" Opacity="0.7" Visibility="{Binding ElementName=TgGreen, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                            <Polygon Points="{Binding Path=BlueColorHistogramPoints}" Stretch="Fill" Fill="Blue" Opacity="0.5" Visibility="{Binding ElementName=TgBlue, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                            <StackPanel Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Center" Orientation="Horizontal">
                                <ToggleButton  Height="26" Width="26" Margin="0" Style="{DynamicResource MetroCircleToggleButtonStyle}" IsChecked="True" Name="TgRed">
                                    <Ellipse Height="10" Width="10" Fill="Red"/>
                                </ToggleButton>
                                <ToggleButton  Height="26" Width="26" Margin="0" Style="{DynamicResource MetroCircleToggleButtonStyle}" IsChecked="True" Name="TgGreen">
                                    <Ellipse Height="10" Width="10" Fill="Green"/>
                                </ToggleButton>
                                <ToggleButton  Height="26" Width="26" Margin="0" Style="{DynamicResource MetroCircleToggleButtonStyle}" IsChecked="True" Name="TgBlue">
                                    <Ellipse Height="10" Width="10" Fill="Blue"/>
                                </ToggleButton>
                                <ToggleButton  Height="26" Width="26" Margin="0" Style="{DynamicResource MetroCircleToggleButtonStyle}" IsChecked="False" Name="TgGray">
                                    <Ellipse Height="10" Width="10" Fill="Gray"/>
                                </ToggleButton>
                            </StackPanel>
                            <CheckBox IsChecked="{Binding HighlightUnderExp}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="18"/>
                            <CheckBox VerticalAlignment="Top" HorizontalAlignment="Right" Width="18" IsChecked="{Binding HighlightOverExp}"/>
                        </Grid>
                    </Expander.Content>
                </Expander>

                <Expander Header="Exposure" IsExpanded="True" >
                    <StackPanel>
                        <local:ExposureStatusControl ExposureStatus="{Binding Path=SelectedCameraDevice.ExposureStatus, Mode=TwoWay}"/>
                        <StackPanel Margin="1" Visibility="{Binding SelectedCameraDevice.FNumber.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{translation:TranslateExtension Aperture}" Target="{Binding ElementName=cmb_aperture}"/>
                            <Border BorderThickness="1" BorderBrush="{Binding Path=SelectedCameraDevice.FNumber.ErrorColor}" >
                                <ComboBox IsEnabled="{Binding Path=SelectedCameraDevice.FNumber.IsEnabled}" ItemsSource="{Binding Path=SelectedCameraDevice.FNumber.Values}" SelectedValue="{Binding Path=SelectedCameraDevice.FNumber.Value}"/>
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding SelectedCameraDevice.IsoNumber.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{translation:TranslateExtension Iso}" Target="{Binding ElementName=cmb_iso}" />
                            <Border BorderThickness="1" BorderBrush="{Binding Path=SelectedCameraDevice.IsoNumber.ErrorColor}" >
                                <ComboBox Name="cmb_iso" IsEnabled="{Binding Path=SelectedCameraDevice.IsoNumber.IsEnabled}" ItemsSource="{Binding Path=SelectedCameraDevice.IsoNumber.Values}" SelectedValue="{Binding Path=SelectedCameraDevice.IsoNumber.Value}"/>
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding SelectedCameraDevice.ShutterSpeed.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{translation:TranslateExtension ShutterSpeed}" Target="{Binding ElementName=cmb_shutter}"/>
                            <Border BorderThickness="1" BorderBrush="{Binding Path=SelectedCameraDevice.ShutterSpeed.ErrorColor}" >
                                <ComboBox Name="cmb_shutter" IsEnabled="{Binding Path=SelectedCameraDevice.ShutterSpeed.IsEnabled}" ItemsSource="{Binding Path=SelectedCameraDevice.ShutterSpeed.Values}" SelectedValue="{Binding Path=SelectedCameraDevice.ShutterSpeed.Value}" />
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding SelectedCameraDevice.ExposureMeteringMode.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{translation:TranslateExtension MeteringMode}" Target="{Binding ElementName=cmb_meter}"/>
                            <Border BorderThickness="1" BorderBrush="{Binding Path=SelectedCameraDevice.ExposureMeteringMode.ErrorColor}" >
                                <ComboBox Name="cmb_meter"  IsEnabled="{Binding Path=SelectedCameraDevice.ExposureMeteringMode.IsEnabled}" ItemsSource="{Binding Path=SelectedCameraDevice.ExposureMeteringMode.Values}" SelectedValue="{Binding Path=SelectedCameraDevice.ExposureMeteringMode.Value}" ToolTip="{Binding Path=SelectedCameraDevice.ExposureMeteringMode.Value}" />
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding SelectedCameraDevice.ExposureCompensation.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{translation:TranslateExtension ExposureComp}" Target="{Binding ElementName=cmb_EComp}"/>
                            <Border BorderThickness="1" BorderBrush="{Binding Path=SelectedCameraDevice.ExposureCompensation.ErrorColor}" >
                                <ComboBox Name="cmb_EComp" IsEnabled="{Binding Path=SelectedCameraDevice.ExposureCompensation.IsEnabled}" ItemsSource="{Binding Path=SelectedCameraDevice.ExposureCompensation.Values}" SelectedValue="{Binding Path=SelectedCameraDevice.ExposureCompensation.Value}"/>
                            </Border>
                        </StackPanel>

                    </StackPanel>
                </Expander>

                <Expander Header="Advanced" IsExpanded="False">
                    <StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding ExposureDelay.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="Exposure Delay" />
                            <Border BorderThickness="1" BorderBrush="{Binding Path=ExposureDelay.ErrorColor}" >
                                <ComboBox  IsEnabled="{Binding Path=ExposureDelay.IsEnabled}" ItemsSource="{Binding Path=ExposureDelay.Values}" SelectedValue="{Binding Path=ExposureDelay.Value}" ToolTip="{Binding Path=ExposureDelay.Value}" />
                            </Border>
                        </StackPanel>                        
                        <StackPanel Margin="1" Visibility="{Binding SelectedCameraDevice.WhiteBalance.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{translation:TranslateExtension WhiteBalance}" Target="{Binding ElementName=cmb_WB}"/>
                            <Border BorderThickness="1" BorderBrush="{Binding Path=SelectedCameraDevice.WhiteBalance.ErrorColor}" >
                                <ComboBox Name="cmb_WB" IsEnabled="{Binding Path=SelectedCameraDevice.WhiteBalance.IsEnabled}" ItemsSource="{Binding Path=SelectedCameraDevice.WhiteBalance.Values}" SelectedValue="{Binding Path=SelectedCameraDevice.WhiteBalance.Value}" ToolTip="{Binding Path=SelectedCameraDevice.WhiteBalance.Value}" />
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding ActivePicCtrlItem.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="Picture Control" />
                            <Border BorderThickness="1" BorderBrush="{Binding Path=ActivePicCtrlItem.ErrorColor}" >
                                <ComboBox  IsEnabled="{Binding Path=ActivePicCtrlItem.IsEnabled}" ItemsSource="{Binding Path=ActivePicCtrlItem.Values}" SelectedValue="{Binding Path=ActivePicCtrlItem.Value}" ToolTip="{Binding Path=ActivePicCtrlItem.Value}" />
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding NoiseReduction.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="Long Exp NR" />
                            <Border BorderThickness="1" BorderBrush="{Binding Path=NoiseReduction.ErrorColor}" >
                                <ComboBox  IsEnabled="{Binding Path=NoiseReduction.IsEnabled}" ItemsSource="{Binding Path=NoiseReduction.Values}" SelectedValue="{Binding Path=NoiseReduction.Value}" ToolTip="{Binding Path=NoiseReduction.Value}" />
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding NoiseReductionHiIso.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="High ISO NR" />
                            <Border BorderThickness="1" BorderBrush="{Binding Path=NoiseReductionHiIso.ErrorColor}" >
                                <ComboBox  IsEnabled="{Binding Path=NoiseReductionHiIso.IsEnabled}" ItemsSource="{Binding Path=NoiseReductionHiIso.Values}" SelectedValue="{Binding Path=NoiseReductionHiIso.Value}" ToolTip="{Binding Path=NoiseReductionHiIso.Value}" />
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding DLighting.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="D-Lighting" />
                            <Border BorderThickness="1" BorderBrush="{Binding Path=DLighting.ErrorColor}" >
                                <ComboBox  IsEnabled="{Binding Path=DLighting.IsEnabled}" ItemsSource="{Binding Path=DLighting.Values}" SelectedValue="{Binding Path=DLighting.Value}" ToolTip="{Binding Path=DLighting.Value}" />
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding HDRMode.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="HDR Mode" />
                            <Border BorderThickness="1" BorderBrush="{Binding Path=HDRMode.ErrorColor}" >
                                <ComboBox  IsEnabled="{Binding Path=HDRMode.IsEnabled}" ItemsSource="{Binding Path=HDRMode.Values}" SelectedValue="{Binding Path=HDRMode.Value}" ToolTip="{Binding Path=HDRMode.Value}" />
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding HDREv.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="HDR Ev" />
                            <Border BorderThickness="1" BorderBrush="{Binding Path=HDREv.ErrorColor}" >
                                <ComboBox  IsEnabled="{Binding Path=HDREv.IsEnabled}" ItemsSource="{Binding Path=HDREv.Values}" SelectedValue="{Binding Path=HDREv.Value}" ToolTip="{Binding Path=HDREv.Value}" />
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding HDRSmoothing.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="HDR Smoothing" />
                            <Border BorderThickness="1" BorderBrush="{Binding Path=HDRSmoothing.ErrorColor}" >
                                <ComboBox  IsEnabled="{Binding Path=HDRSmoothing.IsEnabled}" ItemsSource="{Binding Path=HDRSmoothing.Values}" SelectedValue="{Binding Path=HDRSmoothing.Value}" ToolTip="{Binding Path=HDRSmoothing.Value}" />
                            </Border>
                        </StackPanel>

                    </StackPanel>
                </Expander>

                <Expander Header="Flash" IsExpanded="False">
                    <StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding InitFlash.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="Flash Sync" />
                            <Border BorderThickness="1" BorderBrush="{Binding Path=InitFlash.ErrorColor}" >
                                <ComboBox  IsEnabled="{Binding Path=InitFlash.IsEnabled}" ItemsSource="{Binding Path=InitFlash.Values}" SelectedValue="{Binding Path=InitFlash.Value}" ToolTip="{Binding Path=InitFlash.Value}" />
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding FlashSyncSpeed.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="Flash Sync Speed" />
                            <Border BorderThickness="1" BorderBrush="{Binding Path=FlashSyncSpeed.ErrorColor}" >
                                <ComboBox  IsEnabled="{Binding Path=FlashSyncSpeed.IsEnabled}" ItemsSource="{Binding Path=FlashSyncSpeed.Values}" SelectedValue="{Binding Path=FlashSyncSpeed.Value}" ToolTip="{Binding Path=FlashSyncSpeed.Value}" />
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding FlashCompensation.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="Flash Compensation" />
                            <Border BorderThickness="1" BorderBrush="{Binding Path=FlashCompensation.ErrorColor}" >
                                <ComboBox  IsEnabled="{Binding Path=FlashCompensation.IsEnabled}" ItemsSource="{Binding Path=FlashCompensation.Values}" SelectedValue="{Binding Path=FlashCompensation.Value}" ToolTip="{Binding Path=FlashCompensation.Value}" />
                            </Border>
                        </StackPanel>
                        
                    </StackPanel>
                
                </Expander>

                <Expander Header="Display" IsExpanded="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="88*" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="90*" />
                            <ColumnDefinition Width="5"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <CheckBox Content="{T:TranslateExtension LabelShowFocusRect}" IsChecked="{Binding Path=ShowFocusRect}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Margin="2"/>
                        <CheckBox Content="{translation:TranslateExtension LabelShowActiveArea}" IsChecked="{Binding Path=ShowRuler}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" Margin="2"/>
                        <Button Content="{translation:TranslateExtension LabelSetArea}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" Margin="2" HorizontalAlignment="Right" Command="{Binding SetAreaCommand}" Visibility="{Binding NoSettingArea, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                        <Button Content="{translation:TranslateExtension LabelDoneArea}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" Margin="2" HorizontalAlignment="Right" Command="{Binding DoneSetAreaCommand}" Visibility="{Binding SettingArea, Converter={StaticResource BooleanToVisibilityConverter1}}"/>

                        <Label Content="{T:TranslateExtension LabelBrightness}" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" />
                        <Slider Maximum="60" Minimum="-60" Value="{Binding Brightness}" Grid.Row="3" Grid.ColumnSpan="3" Grid.Column="1" TickFrequency="60" TickPlacement="BottomRight">
                            <Slider.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{T:TranslateExtension LabelReset}" Command="{Binding Path=ResetBrigthnessCommand}" />
                                </ContextMenu>
                            </Slider.ContextMenu>
                        </Slider>

                    </Grid>
                </Expander>
                
                <Expander Header="Files" IsExpanded="False">
                    <StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding ActiveSlot.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="Active Slot"/>
                            <Border BorderThickness="1" BorderBrush="{Binding Path=ActiveSlot.ErrorColor}" >
                                <ComboBox IsEnabled="{Binding Path=ActiveSlot.IsEnabled}" ItemsSource="{Binding Path=ActiveSlot.Values}" SelectedValue="{Binding Path=ActiveSlot.Value}" ToolTip="{Binding Path=ActiveSlot.Value}"/>
                            </Border>
                        </StackPanel>

                       
                        <StackPanel Margin="1" Visibility="{Binding RawCompressionType.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="Raw Compression"/>
                            <Border BorderThickness="1" BorderBrush="{Binding Path=RawCompressionType.ErrorColor}" >
                                <ComboBox IsEnabled="{Binding Path=RawCompressionType.IsEnabled}" ItemsSource="{Binding Path=RawCompressionType.Values}" SelectedValue="{Binding Path=RawCompressionType.Value}" ToolTip="{Binding Path=RawCompressionType.Value}"/>
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding ImageSize.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="Image Size"/>
                            <Border BorderThickness="1" BorderBrush="{Binding Path=ImageSize.ErrorColor}" >
                                <ComboBox IsEnabled="{Binding Path=ImageSize.IsEnabled}" ItemsSource="{Binding Path=ImageSize.Values}" SelectedValue="{Binding Path=ImageSize.Value}" ToolTip="{Binding Path=ImageSize.Value}"/>
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding CaptureAreaCrop.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="Capt Area Crop"/>
                            <Border BorderThickness="1" BorderBrush="{Binding Path=CaptureAreaCrop.ErrorColor}" >
                                <ComboBox IsEnabled="{Binding Path=CaptureAreaCrop.IsEnabled}" ItemsSource="{Binding Path=CaptureAreaCrop.Values}" SelectedValue="{Binding Path=CaptureAreaCrop.Value}" ToolTip="{Binding Path=CaptureAreaCrop.Value}"/>
                            </Border>
                        </StackPanel>
                       
                    </StackPanel>
                    
                </Expander>

                <Expander Header="Camera" IsExpanded="True">
                    <StackPanel>
                        <StackPanel Margin="1" Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowBattery, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{T:TranslateExtension Battery}"  Padding="1"/>
                            <ProgressBar Minimum="0" Maximum="100" Height="20" Value="{Binding Path=SelectedCameraDevice.Battery}" ToolTip="{Binding Path=SelectedCameraDevice.Battery}" Style="{x:Null}" Margin="2" />                           
                        </StackPanel>

                        <StackPanel Margin="1" Visibility="{Binding SelectedCameraDevice.CompressionSetting.Available, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{translation:TranslateExtension Compression}" Target="{Binding ElementName=cmb_com}"/>
                            <Border BorderThickness="1" BorderBrush="{Binding Path=SelectedCameraDevice.CompressionSetting.ErrorColor}" >
                                <ComboBox Name="cmb_com" IsEnabled="{Binding Path=SelectedCameraDevice.CompressionSetting.IsEnabled}" ItemsSource="{Binding Path=SelectedCameraDevice.CompressionSetting.Values}" SelectedValue="{Binding Path=SelectedCameraDevice.CompressionSetting.Value}" ToolTip="{Binding Path=CompressionSetting.Value}"/>
                            </Border>
                        </StackPanel>

                        <StackPanel>
                            <Label Content="{T:TranslateExtension LabelTransfer}" Padding="1" Margin="2"/>
                            <ComboBox Name="cmb_transfer" ToolTip="{Binding ElementName=cmb_transfer, Path=SelectedItem}" Margin="2" SelectionChanged="cmb_transfer_SelectionChanged"/>
                        </StackPanel>

                        <Controls:ToggleSwitch Header="{T:TranslateExtension LabelHostMode}" Grid.Row="3" Grid.Column="1" IsChecked="{Binding Path=SelectedCameraDevice.HostMode}" Margin="3" FontSize="12" />



                    </StackPanel>
                    
                </Expander>

            </StackPanel>
        </ScrollViewer>


    </Grid>
</UserControl>
