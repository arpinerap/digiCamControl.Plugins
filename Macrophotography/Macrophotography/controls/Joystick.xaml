<UserControl x:Class="Macrophotography.controls.Joystick"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:RadialMenu="clr-namespace:RadialMenu.Controls;assembly=RadialMenu"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             mc:Ignorable="d" 
             d:DesignHeight="220" d:DesignWidth="280">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- The IconButtonStyle -->
            <Style x:Key="IconButtonStyle"
               TargetType="{x:Type Button}">
                <!-- set some default values -->
                <Setter Property="Background"
                    Value="Transparent" />
                <Setter Property="BorderBrush"
                    Value="Transparent" />
                <!-- set the visual tree of the control -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <!-- here come the actual sub-controls -->
                            <Border x:Name="border"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                SnapsToDevicePixels="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Padding="0"
                                CornerRadius="3,3,3,3">
                                <Border x:Name="innerBorder"
                                    SnapsToDevicePixels="True"
                                    BorderThickness="1"
                                    Padding="2"
                                    CornerRadius="3,3,3,3">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  Margin="{TemplateBinding Padding}">
                                        <ContentPresenter.Effect>
                                            <!-- give the content a bit of shadow -->
                                            <DropShadowEffect x:Name="shadow"
                                                          ShadowDepth="2"
                                                          Opacity="0.7"
                                                          BlurRadius="3" />
                                        </ContentPresenter.Effect>
                                        <ContentPresenter.RenderTransform>
                                            <!-- push the content a bit to the left and the top -->
                                            <TranslateTransform x:Name="translation"
                                                            X="-1"
                                                            Y="-1" />
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>

                                <!-- when the control is disabled, just let the background shine through -->
                                <Trigger Property="IsEnabled"
                                     Value="false">
                                    <Setter Property="Opacity"
                                        Value="0.5" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                     Value="True">
                                    <!-- This Trigger manages the Animation of the button's content and its shadow -->
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="shadow"
                                                             Storyboard.TargetProperty="(DropShadowEffect.ShadowDepth)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.X)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.Y)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="1"
                                                             Storyboard.TargetName="shadow"
                                                             Storyboard.TargetProperty="(DropShadowEffect.ShadowDepth)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="-1"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.X)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="-1"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.Y)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- This is what Expression Blend creates as default Template -->
            <Style x:Key="ButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle SnapsToDevicePixels="true"
                                   Margin="2"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ButtonNormalBackground"
                             EndPoint="0,1"
                             StartPoint="0,0">
                <GradientStop Color="#F3F3F3"
                          Offset="0" />
                <GradientStop Color="#EBEBEB"
                          Offset="0.5" />
                <GradientStop Color="#DDDDDD"
                          Offset="0.5" />
                <GradientStop Color="#CDCDCD"
                          Offset="1" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonNormalBorder"
                         Color="#FF707070" />
            <Style x:Key="DefaultButtonStyle"
               TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}" />
                <Setter Property="Background"
                    Value="{StaticResource ButtonNormalBackground}" />
                <Setter Property="BorderBrush"
                    Value="{StaticResource ButtonNormalBorder}" />
                <Setter Property="BorderThickness"
                    Value="1" />
                <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
                <Setter Property="VerticalContentAlignment"
                    Value="Center" />
                <Setter Property="Padding"
                    Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Microsoft_Windows_Themes:ButtonChrome SnapsToDevicePixels="true"
                                                               x:Name="Chrome"
                                                               Background="{TemplateBinding Background}"
                                                               BorderBrush="{TemplateBinding BorderBrush}"
                                                               RenderDefaulted="{TemplateBinding IsDefaulted}"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsPressed}">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True" />
                            </Microsoft_Windows_Themes:ButtonChrome>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused"
                                     Value="true">
                                    <Setter Property="RenderDefaulted"
                                        TargetName="Chrome"
                                        Value="true" />
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked"
                                     Value="true">
                                    <Setter Property="RenderPressed"
                                        TargetName="Chrome"
                                        Value="true" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                     Value="false">
                                    <Setter Property="Foreground"
                                        Value="#ADADAD" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        

        </ResourceDictionary>
    </UserControl.Resources>
    

    <Grid Height="220" Width="280">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <RadialMenu:RadialMenu IsOpen="True" HalfShiftedItems="True" Foreground="Transparent" Grid.Column="0" Margin="-20,-40,-50,-40">

            <RadialMenu:RadialMenu.CentralItem>
                <RadialMenu:RadialMenuCentralItem 
                        Width="70" Height="70" 
                        BorderBrush="Transparent" BorderThickness="0"
                        Command="{Binding StartLiveViewCommand}">

                    <TextBlock FontSize="60" FontWeight="Bold" VerticalAlignment="Center">
                        <TextBlock.Foreground>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="#FFDA2222" Offset="1"/>
                            </LinearGradientBrush>
                        </TextBlock.Foreground>Lv</TextBlock>

                </RadialMenu:RadialMenuCentralItem>                                              
            </RadialMenu:RadialMenu.CentralItem>

            <RadialMenu:RadialMenuItem 
                    EdgePadding="-10" EdgeInnerRadius="70" EdgeOuterRadius="100" OuterRadius="100" InnerRadius="70"
                    ContentRadius="70"
                    ArrowRadius="85" ArrowHeight="30" ArrowWidth="40" ArrowBorderThickness="5" ArrowBorderBrush="Gray" ArrowBackground="Snow">

            </RadialMenu:RadialMenuItem>

            <RadialMenu:RadialMenuItem  IsEnabled="False"
                    EdgePadding="10" EdgeInnerRadius="70" EdgeOuterRadius="90" OuterRadius="100" InnerRadius="70"
                    ContentRadius="50" 
                    ArrowRadius="80" ArrowBackground="WhiteSmoke" ArrowHeight="12" ArrowWidth="30">

            </RadialMenu:RadialMenuItem>


            <RadialMenu:RadialMenuItem 
                    EdgePadding="-50" EdgeInnerRadius="70" EdgeOuterRadius="100" OuterRadius="100" InnerRadius="70"
                    ContentRadius="38"
                    ArrowRadius="85" ArrowHeight="30" ArrowWidth="40" ArrowBorderThickness="5" ArrowBorderBrush="Gray" ArrowBackground="Snow">

            </RadialMenu:RadialMenuItem>

            <RadialMenu:RadialMenuItem IsEnabled="False"
                    EdgePadding="10" EdgeInnerRadius="70" EdgeOuterRadius="90" OuterRadius="100" InnerRadius="70"
                    ContentRadius="50" 
                    ArrowRadius="80" ArrowBackground="WhiteSmoke" ArrowHeight="12" ArrowWidth="30">

            </RadialMenu:RadialMenuItem>


            <RadialMenu:RadialMenuItem 
                    EdgePadding="-50" EdgeInnerRadius="70" EdgeOuterRadius="100" OuterRadius="100" InnerRadius="70"
                    ContentRadius="40" 
                    ArrowRadius="85" ArrowHeight="30" ArrowWidth="40" ArrowBorderThickness="5" ArrowBorderBrush="Gray" ArrowBackground="Snow">

            </RadialMenu:RadialMenuItem>

            <RadialMenu:RadialMenuItem IsEnabled="False"
                    EdgePadding="10" EdgeInnerRadius="70" EdgeOuterRadius="90" OuterRadius="100" InnerRadius="70"
                    ContentRadius="50" 
                    ArrowRadius="80" ArrowBackground="WhiteSmoke" ArrowHeight="12" ArrowWidth="30">

            </RadialMenu:RadialMenuItem>


            <RadialMenu:RadialMenuItem 
                    EdgePadding="-50" EdgeInnerRadius="70" EdgeOuterRadius="100" OuterRadius="100" InnerRadius="70"
                    ContentRadius="65"
                    ArrowRadius="85" ArrowHeight="30" ArrowWidth="40" ArrowBorderThickness="5" ArrowBorderBrush="Gray" ArrowBackground="Snow">

            </RadialMenu:RadialMenuItem>

            <RadialMenu:RadialMenuItem IsEnabled="False"
                    EdgePadding="10" EdgeInnerRadius="70" EdgeOuterRadius="90" OuterRadius="100" InnerRadius="70"
                    ContentRadius="50" 
                    ArrowRadius="80" ArrowBackground="WhiteSmoke" ArrowHeight="12" ArrowWidth="30">

            </RadialMenu:RadialMenuItem>


        </RadialMenu:RadialMenu>

        <Slider Style="{DynamicResource FlatSlider}"
                    Grid.Column="1" Height="70"
                    Orientation="Vertical" VerticalAlignment="Center"
                    AutoToolTipPlacement="BottomRight">
        </Slider>

        <Button Style="{DynamicResource IconButtonStyle}"
                        Height="50" Width="50" Margin="-40,0,-40,-40" Padding="-30"
                        Grid.Column="1" 
                        HorizontalAlignment="Center" VerticalAlignment="Top">
            <Image Source="/macrophotography;component/resources/appbar.refresh.clockwise.up.png"/>  
        </Button>



        <Button Style="{DynamicResource IconButtonStyle}"
                        Height="50" Width="50" Margin="-40,-40,-40,0" Padding="-30"
                        Grid.Column="1" 
                        HorizontalAlignment="Center" VerticalAlignment="Bottom">
            <Image Source="/macrophotography;component/resources/appbar.refresh.counterclockwise.down.png"/>
        </Button>

        <Button Style="{DynamicResource IconButtonStyle}"
                        Height="50" Width="50" Padding="-30"
                        Grid.Column="0" 
                        HorizontalAlignment="Left" VerticalAlignment="Bottom">
            <Image Source="/macrophotography;component/resources/appbar.flip.down.png" />
        </Button>

        <Button Style="{DynamicResource IconButtonStyle}"
                        Height="50" Width="50" Padding="-30"
                        Grid.Column="0" 
                        HorizontalAlignment="Left" VerticalAlignment="Top">
            <Image Source="/macrophotography;component/resources/appbar.flip.up.png"/>
        </Button>

    </Grid>

</UserControl>
