<UserControl x:Class="Macrophotography.controls.Zerene"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:T="clr-namespace:CameraControl.Core.Translation;assembly=CameraControl.Core"
             xmlns:viewModel="clr-namespace:Macrophotography.ViewModel"
             xmlns:local="clr-namespace:Macrophotography.controls"
             xmlns:macrophotography="clr-namespace:Macrophotography"
             xmlns:my="clr-namespace:NMT.Wpf.Controls;assembly=PulseButton"
             xmlns:Core="clr-namespace:CameraControl.Core;assembly=CameraControl.Core"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="200" d:DesignWidth="2000">

    <UserControl.DataContext>
        <viewModel:ZereneBatchViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
                <ResourceDictionary Source="/Macrophotography;component/Styles/CustomControls.xaml"/>
                <ResourceDictionary Source="/Macrophotography;component/Resources/Icons.xaml" />
                <ResourceDictionary Source="/Macrophotography;component/Resources/Moreicons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1" />

            <!-- The IconButtonStyle -->
            <Style x:Key="IconButtonStyle"
               TargetType="{x:Type Button}">
                <!-- set some default values -->
                <Setter Property="Background"
                    Value="Transparent" />
                <Setter Property="BorderBrush"
                    Value="Transparent" />
                <!-- set the visual tree of the control -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <!-- here come the actual sub-controls -->
                            <Border x:Name="border"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                SnapsToDevicePixels="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Padding="0"
                                CornerRadius="3,3,3,3">
                                <Border x:Name="innerBorder"
                                    SnapsToDevicePixels="True"
                                    BorderThickness="1"
                                    Padding="2"
                                    CornerRadius="3,3,3,3">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  Margin="{TemplateBinding Padding}">
                                        <ContentPresenter.Effect>
                                            <!-- give the content a bit of shadow -->
                                            <DropShadowEffect x:Name="shadow"
                                                          ShadowDepth="2"
                                                          Opacity="0.7"
                                                          BlurRadius="3" />
                                        </ContentPresenter.Effect>
                                        <ContentPresenter.RenderTransform>
                                            <!-- push the content a bit to the left and the top -->
                                            <TranslateTransform x:Name="translation"
                                                            X="-1"
                                                            Y="-1" />
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>

                                <!-- when the control is disabled, just let the background shine through -->
                                <Trigger Property="IsEnabled"
                                     Value="false">
                                    <Setter Property="Opacity"
                                        Value="0.5" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                     Value="True">
                                    <!-- This Trigger manages the Animation of the button's content and its shadow -->
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="shadow"
                                                             Storyboard.TargetProperty="(DropShadowEffect.ShadowDepth)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.X)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.Y)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="1"
                                                             Storyboard.TargetName="shadow"
                                                             Storyboard.TargetProperty="(DropShadowEffect.ShadowDepth)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="-1"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.X)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="-1"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.Y)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="800*"/>
            <ColumnDefinition Width="290"/>
            <ColumnDefinition Width="280"/>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="270"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>

        <GroupBox Header="File List" 
                Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="300" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ListBox VirtualizingStackPanel.IsVirtualizing="True" ItemsSource="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=DefaultSession.Files, IsAsync=True}"
                             BorderThickness="0" IsSynchronizedWithCurrentItem="True" Focusable="False" VerticalAlignment="Bottom" Margin="5" ScrollViewer.CanContentScroll="False" >
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="classes:FileItem">
                            <Grid Margin="-5,0,0,0" >
                                <StackPanel Orientation="Horizontal">
                                    <Grid Height="125" Margin="4,4,4,4">
                                        <Image Source="{Binding Path=Thumbnail}" ToolTip="{Binding Path=ToolTip}" Stretch="Uniform" Margin="3" Name="_image" RenderTransformOrigin="0.5,0.5"  Height="125">
                                            <Image.Effect>
                                                <DropShadowEffect ShadowDepth="2" Color="Black" BlurRadius="7" />
                                            </Image.Effect>
                                            <Image.LayoutTransform>
                                                <RotateTransform  Angle="{Binding RotationAngle}" />
                                            </Image.LayoutTransform>
                                        </Image>
                                        <Image Source="{Binding Path=ThumbnailMarks}" ToolTip="{Binding Path=ToolTip}" Stretch="Uniform" Margin="3" RenderTransformOrigin="0.5,0.5" Height="125"
                                       Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=EnhancedThumbs, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <Image.Effect>
                                                <DropShadowEffect ShadowDepth="2" Color="Black" BlurRadius="7" />
                                            </Image.Effect>
                                            <Image.LayoutTransform>
                                                <RotateTransform  Angle="{Binding RotationAngle}" />
                                            </Image.LayoutTransform>
                                        </Image>
                                        <Rectangle Stroke="Transparent" Margin="1" Name="_Rectangle"/>
                                        <CheckBox IsChecked="{Binding Path=IsChecked}" Margin="3,3,3,5" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" FontSize="10" />
                                        <Label Content="RAW" Background="White" Margin="5" Padding="1" Opacity="0.5" FontWeight="Bold" Foreground="Black" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsRaw, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                        <Label Content="VIDEO" Background="White" Margin="5" Padding="1" Opacity="0.5" FontWeight="Bold" Foreground="Black" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsMovie, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                        <controls:ProgressRing IsActive="{Binding Loading}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Height="40" Width="40" />
                                        <Button Content="X" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="7" Command="{Binding DataContext.RemoveItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                   AncestorType=Window}}" CommandParameter="{Binding}" Opacity="0.5"/>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                            <DataTemplate.Triggers>
                                <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                                <DataTrigger Binding="{Binding Path=IsUnLiked}" Value="true">
                                    <Setter TargetName="_Rectangle" Property="Fill" Value="Black" />
                                    <Setter TargetName="_Rectangle" Property="Opacity" Value="0.7" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal" VerticalAlignment="Top"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>


                <Button x:Name="Reload_photo_btn" Style="{DynamicResource IconButtonStyle}" Command="{Binding ReloadCommand}"
                        Height="30" Width="30" Padding="-20"
                        Grid.Column="0" Grid.Row="0" Margin="10" 
                        HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <Rectangle Width="20" Height="20">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_refresh}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>

            </Grid>
        </GroupBox>

        <GroupBox Header="Settings" 
                Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  MinWidth="200" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="120*"/>

                </Grid.ColumnDefinitions>

                <Label Content="New Projects" 
                       Margin="3"
                       Grid.Column="0" Grid.Row="0"                                           
                       HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                <ComboBox ItemsSource="{Binding ProjectDispositionCodes}" DisplayMemberPath="Text" SelectedItem="{Binding ActualProjectDispositionCodeValue}" SelectedIndex="1"
                        Margin="3"
                        Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="0"                                           
                        HorizontalAlignment="Stretch" VerticalAlignment="Center"  />

                <Label Content="Mode" 
                       Margin="3"
                       Grid.Column="0" Grid.Row="1"                                           
                       HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                <ComboBox ItemsSource="{Binding TaskIndicatorCodes}" DisplayMemberPath="Text" SelectedItem="{Binding ActualTaskIndicatorCodeValue}" SelectedIndex="0"
                        Margin="3" 
                        Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1"                                           
                        HorizontalAlignment="Stretch" VerticalAlignment="Center">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding UpDateDMapCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>

                <Label Content="Estimation Radius" IsEnabled="{Binding IsDMap}"
                    Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2"                                           
                       HorizontalAlignment="Right" VerticalAlignment="Center"/>


                <controls:NumericUpDown Value="{Binding EstimatedRadius}" IsEnabled="{Binding IsDMap}"
                        Minimum="0"                 
                        Grid.Column="2" Grid.Row="2"
                        Width="70" Margin="3"/>

                <Label Content="Smoothing Radius" IsEnabled="{Binding IsDMap}"
                        Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" 
                        HorizontalAlignment="Right" VerticalAlignment="Center"/>

                <controls:NumericUpDown Value="{Binding SmoothingRadius}" IsEnabled="{Binding IsDMap}"
                        Minimum="0"                                      
                        Width="70" Margin="3"
                        Grid.Row="3" Grid.Column="2"/>

                <Label Content="Contrast Threshold" IsEnabled="{Binding IsDMap}"
                        Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4" 
                        HorizontalAlignment="Right" VerticalAlignment="Center"/>

                <controls:NumericUpDown Value="{Binding ContrastThreshold}" IsEnabled="{Binding IsDMap}"
                        Minimum="0"                                      
                        Width="70" Margin="3"
                        Grid.Row="4" Grid.Column="2"/>









            </Grid>
        </GroupBox>

        <GroupBox Header="SubStacking" 
                Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  MinWidth="200" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60*"/>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="120*"/>

                </Grid.ColumnDefinitions>


                <RadioButton Content="Make Stack" IsChecked="{Binding IsNotSubStack}" 
                              Padding="5" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Margin="5"/>
                <RadioButton Content="Make Slabs" IsChecked="{Binding IsSubStack}" 
                              Padding="5" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Margin="5"/>
                
                <CheckBox Content="Process All SubStacks" IsChecked="{Binding IsStackSlabs}" IsEnabled="{Binding IsSubStack}" 
                              Padding="5" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Margin="30,0,0,0"/>


                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" IsEnabled="{Binding IsSubStack}">
                    <Label Content="SubStacks" VerticalAlignment="Center"/>

                    <controls:NumericUpDown Value="{Binding Stack_items}" 
                        Minimum="0"                                      
                        Width="70" Margin="3"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="2" IsEnabled="{Binding IsSubStack}">
                    <Label Content="Overlap" VerticalAlignment="Center"/>

                    <controls:NumericUpDown Value="{Binding Stack_overlap}"   
                        Minimum="0"                 
                        Grid.Column="2" Grid.Row="1"
                        Width="70" Margin="3"/>
                </StackPanel>

                

                
                       

                <Label Content="SubMode" 
                       Margin="3"
                       Grid.Column="0" Grid.Row="4"                                           
                       HorizontalAlignment="Right" VerticalAlignment="Bottom"/>

                <ComboBox ItemsSource="{Binding TaskIndicatorCodes}" DisplayMemberPath="Text" SelectedItem="{Binding ActualTaskIndicatorCodeValueSlab}" IsEnabled="{Binding IsStackSlabs}"
                        Margin="3"
                        Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="4"                                           
                        HorizontalAlignment="Stretch" VerticalAlignment="Center" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding UpDateDMapCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>





            </Grid>
        </GroupBox>

        <GroupBox Header="Tasks" 
                Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  MinWidth="200" >
            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>

                <ListBox x:Name="StackTasks_lbx" ItemsSource="{Binding StackTasks}" DisplayMemberPath="TaskName"
                    Grid.Column="1" Grid.ColumnSpan="2"
                    BorderBrush="{x:Null}" ScrollViewer.VerticalScrollBarVisibility="Disabled" >
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical"  />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <StackPanel Grid.RowSpan="2">
                    <Button Style="{DynamicResource IconButtonStyle}" Command="{Binding AddTaskCommand}"
                        Margin="5" 
                        HorizontalAlignment="Left" VerticalAlignment="Bottom">
                        <Rectangle Width="20" Height="20">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_list_add_above}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button Style="{DynamicResource IconButtonStyle}" Command="{Binding ReloadCommand}"
                        Margin="5" 
                        HorizontalAlignment="Left" VerticalAlignment="Bottom">
                        <Rectangle Width="20" Height="20">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_list_delete}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button Style="{DynamicResource IconButtonStyle}" Command="{Binding ReloadCommand}"
                        Margin="5" 
                        HorizontalAlignment="Left" VerticalAlignment="Bottom">
                        <Rectangle Width="20" Height="20">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_list_up}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button Style="{DynamicResource IconButtonStyle}" Command="{Binding ReloadCommand}"
                        Margin="5" 
                        HorizontalAlignment="Left" VerticalAlignment="Bottom">
                        <Rectangle Width="20" Height="20">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_list_reorder_down}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                </StackPanel>
                





            </Grid>
        </GroupBox>

        <GroupBox Header="Process" 
                Grid.Column="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  MinWidth="200" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" 
                            Grid.Row="0" Margin="0,5,0,0" IsEnabled="{Binding IsFree}">
                    <Button Content="Preview" Margin="3" Command="{Binding PreviewCommand}" 
                            Width="100"/>
                    <Button Content="Create final image" Margin="3"  Command="{Binding GenerateCommand}"
                            Width="130" HorizontalAlignment="Right"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Margin="0,5,0,0" HorizontalAlignment="Stretch" Grid.Row="1" >
                    <Button Width="60" Grid.Row="1" Content="Stop"  Margin="3" Command="{Binding StopCommand}" IsEnabled="{Binding IsBusy}"/>
                    <ProgressBar Height="20" Width="160" Margin="10,0,0,0" HorizontalAlignment="Right"/>
                </StackPanel>
                
                <ComboBox ItemsSource="{Binding OutputImageDispositionCodes}" DisplayMemberPath="Text" SelectedItem="{Binding ActualOutputImageDispositionCodeValue}" 
                        Margin="5"
                        Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="2"                                           
                        HorizontalAlignment="Stretch" VerticalAlignment="Center"  />
                <StackPanel Orientation="Horizontal" Margin="5"
                        Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="3"                                           
                        HorizontalAlignment="Stretch" VerticalAlignment="Center">
                    <RadioButton Content="Tiff" IsChecked="{Binding IsTiff}" Padding="5"/>
                    <RadioButton Content="Jpeg" IsChecked="{Binding IsJpeg}" Padding="5"/>
                </StackPanel>
                

            </Grid>
        </GroupBox>

        <GroupBox Header="Log" 
                Grid.Column="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  MinWidth="200">
            <ListBox ItemsSource="{Binding Output}"/>
        </GroupBox>


    </Grid>
</UserControl>
