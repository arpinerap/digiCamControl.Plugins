<UserControl x:Class="Macrophotography.controls.RailControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:T="clr-namespace:CameraControl.Core.Translation;assembly=CameraControl.Core"
             xmlns:local="clr-namespace:Macrophotography.controls"
             xmlns:macrophotography="clr-namespace:Macrophotography"
             xmlns:my="clr-namespace:NMT.Wpf.Controls;assembly=PulseButton"
             mc:Ignorable="d" 
             d:DesignHeight="200" d:DesignWidth="2000">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
                <ResourceDictionary Source="/Macrophotography;component/Styles/CustomControls.xaml"/>
                <ResourceDictionary Source="/Macrophotography;component/Resources/Icons.xaml" />
                <ResourceDictionary Source="/Macrophotography;component/Resources/Moreicons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <macrophotography:MilimetersConverter x:Key="MilimetersConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1" />

            <!-- The IconButtonStyle -->
            <Style x:Key="IconButtonStyle"
               TargetType="{x:Type Button}">
                <!-- set some default values -->
                <Setter Property="Background"
                    Value="Transparent" />
                <Setter Property="BorderBrush"
                    Value="Transparent" />
                <!-- set the visual tree of the control -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <!-- here come the actual sub-controls -->
                            <Border x:Name="border"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                SnapsToDevicePixels="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Padding="0"
                                CornerRadius="3,3,3,3">
                                <Border x:Name="innerBorder"
                                    SnapsToDevicePixels="True"
                                    BorderThickness="1"
                                    Padding="2"
                                    CornerRadius="3,3,3,3">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  Margin="{TemplateBinding Padding}">
                                        <ContentPresenter.Effect>
                                            <!-- give the content a bit of shadow -->
                                            <DropShadowEffect x:Name="shadow"
                                                          ShadowDepth="2"
                                                          Opacity="0.7"
                                                          BlurRadius="3" />
                                        </ContentPresenter.Effect>
                                        <ContentPresenter.RenderTransform>
                                            <!-- push the content a bit to the left and the top -->
                                            <TranslateTransform x:Name="translation"
                                                            X="-1"
                                                            Y="-1" />
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>

                                <!-- when the control is disabled, just let the background shine through -->
                                <Trigger Property="IsEnabled"
                                     Value="false">
                                    <Setter Property="Opacity"
                                        Value="0.5" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                     Value="True">
                                    <!-- This Trigger manages the Animation of the button's content and its shadow -->
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="shadow"
                                                             Storyboard.TargetProperty="(DropShadowEffect.ShadowDepth)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.X)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.Y)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="1"
                                                             Storyboard.TargetName="shadow"
                                                             Storyboard.TargetProperty="(DropShadowEffect.ShadowDepth)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="-1"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.X)" />
                                                <DoubleAnimation Duration="0:0:0"
                                                             To="-1"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.Y)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- This is what Expression Blend creates as default Template -->
            <Style x:Key="ButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle SnapsToDevicePixels="true"
                                   Margin="2"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ButtonNormalBackground"
                             EndPoint="0,1"
                             StartPoint="0,0">
                <GradientStop Color="#F3F3F3"
                          Offset="0" />
                <GradientStop Color="#EBEBEB"
                          Offset="0.5" />
                <GradientStop Color="#DDDDDD"
                          Offset="0.5" />
                <GradientStop Color="#CDCDCD"
                          Offset="1" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonNormalBorder"
                         Color="#FF707070" />
            <Style x:Key="DefaultButtonStyle"
               TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}" />
                <Setter Property="Background"
                    Value="{StaticResource ButtonNormalBackground}" />
                <Setter Property="BorderBrush"
                    Value="{StaticResource ButtonNormalBorder}" />
                <Setter Property="BorderThickness"
                    Value="1" />
                <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
                <Setter Property="VerticalContentAlignment"
                    Value="Center" />
                <Setter Property="Padding"
                    Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Microsoft_Windows_Themes:ButtonChrome SnapsToDevicePixels="true"
                                                               x:Name="Chrome"
                                                               Background="{TemplateBinding Background}"
                                                               BorderBrush="{TemplateBinding BorderBrush}"
                                                               RenderDefaulted="{TemplateBinding IsDefaulted}"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsPressed}">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True" />
                            </Microsoft_Windows_Themes:ButtonChrome>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused"
                                     Value="true">
                                    <Setter Property="RenderDefaulted"
                                        TargetName="Chrome"
                                        Value="true" />
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked"
                                     Value="true">
                                    <Setter Property="RenderPressed"
                                        TargetName="Chrome"
                                        Value="true" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                     Value="false">
                                    <Setter Property="Foreground"
                                        Value="#ADADAD" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <QuadraticEase x:Key="EasingIn" EasingMode="EaseIn" />

        </ResourceDictionary>
    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="500"/>
            <ColumnDefinition Width="700*"/>
            <ColumnDefinition Width="400*"/>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>


        <GroupBox Header="Magnification" 
                                      Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" 
                                      Height="auto">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <controls:NumericUpDown x:Name="NumUD_Magni" 
                                        Value="{Binding Magni, Source={x:Static macrophotography:StepperManager.Instance}}" 
                                        Minimum="{Binding MagniMin, Source={x:Static macrophotography:StepperManager.Instance}}"
                                        Maximum="{Binding MagniMax, Source={x:Static macrophotography:StepperManager.Instance}}"
                                        Grid.Column="0"
                                        TextAlignment="Center" BorderThickness="0"
                                        HasDecimals="True" HideUpDownButtons="True" Interval="0.5" Width="100"/>

                <Slider x:Name="Sld_Magni" 
                        VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10,0,10,0" Grid.Column="1"
                        AutoToolTipPlacement="BottomRight" TickFrequency="0.5" IsSnapToTickEnabled="True"
                        Value="{Binding Magni, Source={x:Static macrophotography:StepperManager.Instance}}" 
                        Minimum="{Binding MagniMin, Source={x:Static macrophotography:StepperManager.Instance}}"
                        Maximum="{Binding MagniMax, Source={x:Static macrophotography:StepperManager.Instance}}"/>



            </Grid>
        </GroupBox>

        <GroupBox Header="Rail Movement" 
                                      Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                                      Height="130" MinWidth="300" IsEnabled="{Binding IsFree, Source={x:Static macrophotography:StepperManager.Instance}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="70"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>

                </Grid.RowDefinitions>

                <local:Stepper Grid.Row="1" />

                <WrapPanel Grid.Row="2" HorizontalAlignment="Center" >
                    <Label Content="Speed" 
                        HorizontalAlignment="Center" VerticalAlignment="Center" 
                        Height="26" Width="50" FontSize="12"/>

                    <Slider x:Name="SpeedStep_slider" Style="{DynamicResource FlatSlider}"
                        Height="8" Width="100" Margin="10,0,10,0" HorizontalAlignment="Left" Value="{Binding Speed, Source={x:Static macrophotography:StepperManager.Instance}}"                                        
                        Minimum="5" Maximum="200"  
                        AutoToolTipPlacement="BottomRight" IsSnapToTickEnabled="True" Ticks="5,10,20,50,100"/>
                </WrapPanel>


            </Grid>
        </GroupBox>

        <GroupBox Header="Focus Limits" 
                                  Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                                      Height="200" MinWidth="500">
            <Grid IsEnabled="{Binding IsFree, Source={x:Static macrophotography:StepperManager.Instance}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="90"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition Width="180*"/>
                    <ColumnDefinition Width="90"/>
                </Grid.ColumnDefinitions>


                <Button x:Name="NearFocus_btn" Style="{DynamicResource IconButtonStyle}" 
                                            Width="70" Height="70"
                                            Grid.Row="1" Grid.Column="0"  
                                            HorizontalAlignment="Center" VerticalAlignment="Center" Click="NearFocus_btn_Click">
                    <Image Source="/macrophotography;component/resources/nearfocus.png"/>

                </Button>
                <my:PulseButton x:Name="NearPulsing" Width="60" Height="60" HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Grid.Row="1" Grid.Column="0" ButtonBrush="{x:Null}" ButtonDisabledBrush="{x:Null}" Foreground="{x:Null}" 
                                PulseColor="GhostWhite" ButtonPressedBrush="{x:Null}" ButtonHighlightBrush="{x:Null}" Background="{x:Null}" 
                                IsReflective="False" 
                                IsPulsing="True" 
                                Pulses="3" RadiusX="2" RadiusY="2" IsEllipsis="True" PulseWidth="1">
                    <my:PulseButton.BorderBrush>
                        <ImageBrush/>
                    </my:PulseButton.BorderBrush>
                </my:PulseButton>

                <Button x:Name="FarFocus_btn" Style="{DynamicResource IconButtonStyle}" BorderThickness="0" 
                                        Width="70" Height="70" HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Grid.Column="2" Grid.Row="1" Click="FarFocus_btn_Click">
                    <Image Source="/macrophotography;component/resources/farfocus.png"/>
                </Button>
                <my:PulseButton x:Name="FarPulsing" Width="60" Height="60" HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Grid.Row="1" Grid.Column="2" ButtonBrush="{x:Null}" ButtonDisabledBrush="{x:Null}" Foreground="{x:Null}" 
                                PulseColor="GhostWhite" ButtonPressedBrush="{x:Null}" ButtonHighlightBrush="{x:Null}" Background="{x:Null}" 
                                IsReflective="False" IsPulsing="True" Pulses="3" RadiusX="2" RadiusY="2" IsEllipsis="True" PulseWidth="1"/>


                <Slider x:Name="Position_sld"
                    Minimum="{Binding NearFocus, Source={x:Static macrophotography:StepperManager.Instance}}" 
                    Maximum="{Binding FarFocus, Source={x:Static macrophotography:StepperManager.Instance}}"
                    Value="{Binding Position, Source={x:Static macrophotography:StepperManager.Instance}}"  
                    IsMoveToPointEnabled="False"
                    TickPlacement="BottomRight" TickFrequency="{Binding ShotStepFull, Source={x:Static macrophotography:StepperManager.Instance}}"  IsSnapToTickEnabled="True"
                    Interval="{Binding ShotStepFull, Source={x:Static macrophotography:StepperManager.Instance}, Mode=TwoWay}"
                    Grid.Row="1" Grid.Column="1" Margin="20,0,20,0"
                    VerticalAlignment="Center" PreviewMouseLeftButtonDown="Position_sld_PreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="Position_sld_PreviewMouseLeftButtonUp"/>

                <WrapPanel Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" Margin="20,0,0,0"
                            HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <Label Content="Total DOF"/>
                    <TextBox  x:Name="TotalDoF_txt" Text="{Binding TotalDOF, Source={x:Static macrophotography:StepperManager.Instance}}" IsReadOnly="True"
                         HorizontalAlignment="Center" VerticalAlignment="Bottom" TextAlignment="Right"
                         Width="60" BorderThickness="0" Background="{x:Null}"/>
                    <Label Content="steps"/>
                </WrapPanel>
                <Label Content="|"
                           Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" 
                           HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="50,0,0,0"/>
                <WrapPanel Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" Margin="0,0,20,0"
                            HorizontalAlignment="Right" VerticalAlignment="Bottom">
                    <TextBox  x:Name="mmTotalDOF_txt" Text="{Binding TotalDOFFull, Converter={StaticResource MilimetersConverter}, Source={x:Static macrophotography:StepperManager.Instance}, Mode=OneWay}" IsReadOnly="True"
                         HorizontalAlignment="Center" VerticalAlignment="Bottom" TextAlignment="Right" Foreground="#FFA50000" FontSize="14" FontWeight="Bold" Background="{x:Null}"
                         Width="60" BorderThickness="0"/>
                    <Label Content="mm"/>
                </WrapPanel>



                <Label Content="Final Depth of Field" 
                                           Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1"
                                           HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <TextBox  x:Name="LastPosition_txt" Text="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" IsReadOnly="True"
                         HorizontalAlignment="Right" VerticalAlignment="Top" TextAlignment="Right"  
                         Width="60" BorderThickness="0"/>


                <controls:ToggleSwitch x:Name="NearFocusLock"
                                        OnLabel="Lock" OffLabel="Free"
                                        FlowDirection="RightToLeft"                                        
                                        Grid.Row="2" Grid.Column="0" Grid.RowSpan="3"
                                        HorizontalAlignment="Center" Padding="-10" Margin="10,10,0,0">


                </controls:ToggleSwitch>

                <controls:ToggleSwitch x:Name="FarFocusLock"
                                        OnLabel="Lock" OffLabel="Free"
                                        Grid.Row="2" Grid.Column="2" Grid.RowSpan="3"
                                        HorizontalAlignment="Center" Padding="-10" Margin="0,10,10,0">

                </controls:ToggleSwitch>

                <WrapPanel Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Margin="20,10,0,0">
                    <Label Content="Position"/>
                    <TextBox x:Name="Position_txt" Text="{Binding Position, Source={x:Static macrophotography:StepperManager.Instance}}" IsReadOnly="True"
                             HorizontalAlignment="Stretch" VerticalAlignment="Bottom" TextAlignment="Right"
                             Width="60" BorderThickness="0"/>
                    <Label Content="steps"/>
                </WrapPanel>
                <Label Content="|" 
                        Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center" Margin="50,10,0,0"/>
                <WrapPanel Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Margin="0,10,20,0">

                    <TextBox x:Name="mmPosition_txt" Text="{Binding Position, Converter={StaticResource MilimetersConverter}, Source={x:Static macrophotography:StepperManager.Instance}, Mode=OneWay}" IsReadOnly="True"
                             HorizontalAlignment="Center" VerticalAlignment="Bottom" TextAlignment="Right" Foreground="#FFA50000" FontSize="14" FontWeight="Bold" Background="{x:Null}"
                             Width="60" BorderThickness="0"/>
                    <Label Content="mm"/>
                </WrapPanel>
            </Grid>
        </GroupBox>

        <GroupBox Header="Shotting Info" 
                Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                Height="200" MinWidth="300">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>


                <WrapPanel Grid.Row="0" HorizontalAlignment="Center">
                    <Label Content="Shot DOF"/>
                    <TextBox  x:Name="ShotStep_txt" Text="{Binding ShotStepFull, Source={x:Static macrophotography:StepperManager.Instance}}"
                         HorizontalAlignment="Center" VerticalAlignment="Bottom"  TextAlignment="Right"  
                         Width="60" BorderThickness="0" IsReadOnly="True"/>
                    <Label Content="steps"/>
                    <Label Content="|"/>
                    <TextBox  x:Name="ShotDoF_txt" Text="{Binding ShotStepFull, Converter={StaticResource MilimetersConverter}, Source={x:Static macrophotography:StepperManager.Instance}, Mode=OneWay}"
                         HorizontalAlignment="Center" VerticalAlignment="Bottom"  TextAlignment="Right" Background="{x:Null}"
                         Width="60" BorderThickness="0" IsReadOnly="True" Foreground="#FFA50000" FontSize="14" FontWeight="Bold"/>
                    <Label Content="mm"/>
                </WrapPanel>


                <WrapPanel Grid.Row="1" HorizontalAlignment="Center">
                    <Label Content="Number Shots"/>
                    <TextBox  x:Name="NumberShots_txt" Text="{Binding ShotsNumber, Source={x:Static macrophotography:StepperManager.Instance}}"
                         HorizontalAlignment="Center" VerticalAlignment="Bottom"   
                         Width="30" BorderThickness="0"/>
                    <Label Content="|"/>
                    <TextBox  x:Name="NumberShotsFull_txt" Text="{Binding ShotsNumberFull, Source={x:Static macrophotography:StepperManager.Instance}}"
                         HorizontalAlignment="Center" VerticalAlignment="Bottom"   
                         Width="30" BorderThickness="0"/>

                </WrapPanel>

                <WrapPanel Grid.Row="2" HorizontalAlignment="Center">
                    <Label Content="Full DOF"/>
                    <TextBox  x:Name="ExtraTotalDoF_txt" Text="{Binding TotalDOFFull, Source={x:Static macrophotography:StepperManager.Instance}}"
                         HorizontalAlignment="Center" VerticalAlignment="Bottom"  TextAlignment="Right" 
                         Width="50" BorderThickness="0"/>
                    <Label Content="steps"/>
                </WrapPanel>




            </Grid>



        </GroupBox>

        <GroupBox Header="Stacking Adds" 
                                  Grid.Column="3" VerticalAlignment="Top" 
                                      Height="200">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120*"/>
                    <ColumnDefinition Width="120*"/>

                </Grid.ColumnDefinitions>




                <controls:NumericUpDown Value="{Binding PlusNearShots, Source={x:Static macrophotography:StepperManager.Instance}}"
                                        Minimum="0"                                      
                                        Width="100"
                                        Grid.Row="1" Grid.Column="0" ValueChanged="UpDataTotalDOF"/>
                <Label Content="Near Extra Shots" 
                                           Grid.Column="0" Grid.Row="0" Padding="-5"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>

                <controls:NumericUpDown Value="{Binding PlusFarShots, Source={x:Static macrophotography:StepperManager.Instance}}"
                                        Minimum="0"
                                        Width="100"
                                        Grid.Row="1" Grid.Column="1" ValueChanged="UpDataTotalDOF" />
                <Label Content="Far Extra Shots" 
                                           Grid.Column="1" Grid.Row="0" Padding="-5"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>

                <controls:NumericUpDown controls:TextBoxHelper.Watermark="Overlap Focus %"
                                        Value="{Binding Overlap, Source={x:Static macrophotography:StepperManager.Instance}}" 
                                            Minimum="20" Maximum="100" Interval="10"  
                                            Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4"
                                            Width="120" ValueChanged="NumericUpDown_ValueChanged"/>
                <Label Content="Overlap Focus" Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>

                <Label Content="Stack Direction to" 
                       Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Margin="3,5,0,0" VerticalAlignment="Center" 
                       FontWeight="SemiBold" FontSize="16"/>
                <controls:ToggleSwitch x:Name="Direction_swch"
                                        OnLabel="Near" OffLabel="Far"
                                        IsChecked="{Binding GoNearToFar, Source={x:Static macrophotography:StepperManager.Instance}}"                                                                            
                                        Grid.Row="2" Grid.Column="1"
                                        HorizontalAlignment="Center"
                                        Margin="0,5,0,0">

                </controls:ToggleSwitch>

            </Grid>
        </GroupBox>

        <GroupBox Header="Process" 
                                      Grid.Column="4" HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                                      Height="200" Margin="10,5,0,-5">
            <StackPanel>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Content="Mv/Cpt Delay" Grid.Column="0" />
                    <controls:NumericUpDown Value="{Binding StabilizationDelay, Source={x:Static macrophotography:StepperManager.Instance}}" 
                                    Minimum="0" Interval="1000" IsEnabled="{Binding IsFree}"
                                    Grid.Column="1" Margin="3"/>

                    <Label Content="Start Delay" Grid.Column="0" Grid.Row="1" />
                    <controls:NumericUpDown Value="{Binding InitStackDelay, Source={x:Static macrophotography:StepperManager.Instance}}"
                                    Minimum="5000" Interval="1000" IsEnabled="{Binding IsFree}" 
                                    Grid.Column="1" Grid.Row="1" Margin="3"/>

                    <controls:NumericUpDown Value="{Binding Degrees, Source={x:Static macrophotography:StepperManager.Instance}}"
                                    Minimum="10" Interval="360" IsEnabled="{Binding IsFree}" 
                                    Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="1" Margin="3"/>

                    <Grid Grid.Row="2" Grid.ColumnSpan="3" VerticalAlignment="Top" Visibility="{Binding IsNotStacking, Source={x:Static macrophotography:StepperManager.Instance}, Converter={StaticResource BooleanToVisibilityConverter1}}">
                        <my:PulseButton x:Name="Capture_btn" Content="Capture" 
                        HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5"
                                    Height="70" Width="70"
                                    FontWeight="SemiBold"
                                    IsPulsing="False"
                        RadiusX="5" 
                        RadiusY="5"
                        IsEllipsis="True"                        
                        IsReflective="True"
                        ButtonBrush="Black"
                        ButtonHighlightBrush="{x:Null}" 
                        ButtonPressedBrush="#FFB02213"
                        Foreground="White" BorderThickness="0" FontFamily="Malgun Gothic" Click="Capture_btn_Click"/>

                        <my:PulseButton x:Name="Start_btn" Content="Start"
                                    Height="80" Width="90" HorizontalAlignment="Right" Margin="5"
                                    IsPulsing="False"
                                    FontSize="26" FontWeight="Bold"
                                    BorderBrush="Black"
                        RadiusX="30" 
                        RadiusY="30"
                        IsEllipsis="False" 
                        PulseScale="1.7" 
                        PulseWidth="1" 
                        PulseSpeed="0:0:5" 
                        PulseColor="GhostWhite"
                        Pulses="5"                         
                        IsReflective="True"
                        ButtonBrush="Black"
                        ButtonHighlightBrush="{x:Null}" 
                        ButtonPressedBrush="#FFB02213"
                        Foreground="White"
                        PulseEasing="{StaticResource EasingIn}" FontFamily="Malgun Gothic" Click="Start2_btn_Click">

                        </my:PulseButton>
                    </Grid>

                    <Grid Grid.Row="2" Grid.ColumnSpan="3" VerticalAlignment="Top" Visibility="{Binding IsStacking, Source={x:Static macrophotography:StepperManager.Instance}, Converter={StaticResource BooleanToVisibilityConverter1}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="40"/>
                        </Grid.RowDefinitions>

                        <Label x:Name="Progress_lbl" Content="Progress Label" FontSize="18" FontWeight="Bold" Foreground="#FFA50000" Margin="10,0,0,0"/>
                        <ProgressBar x:Name="ProgressBarStack"
                                     Grid.Row="1" Width="180" Height="15" VerticalAlignment="Center"/>
                        <Button x:Name="CancelStack_btn" Content="Cancel" 
                                Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="100" FontSize="14" Margin="5" Click="CancelStack_btn_Click"/>
                                               
                    </Grid>


                </Grid>
            </StackPanel>
        </GroupBox>

    </Grid>
</UserControl>
